# Generated by Django 5.2.4 on 2025-07-04 12:23

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("stations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="APRSPacket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("raw_packet", models.TextField(help_text="Raw APRS packet data")),
                (
                    "packet_type",
                    models.CharField(
                        choices=[
                            ("position", "Position Report"),
                            ("weather", "Weather Data"),
                            ("message", "Message"),
                            ("status", "Status Report"),
                            ("object", "Object Report"),
                            ("item", "Item Report"),
                            ("query", "Query"),
                            ("telemetry", "Telemetry"),
                            ("mic_e", "Mic-E"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                ("source_callsign", models.CharField(db_index=True, max_length=10)),
                ("destination", models.CharField(blank=True, max_length=10)),
                ("path", models.CharField(blank=True, max_length=100)),
                ("parsed_data", models.JSONField(blank=True, default=dict)),
                ("is_processed", models.BooleanField(default=False)),
                ("processing_errors", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["source_callsign", "timestamp"],
                        name="packets_apr_source__2fbd05_idx",
                    ),
                    models.Index(
                        fields=["packet_type", "timestamp"],
                        name="packets_apr_packet__7f9d8a_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MessagePacket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "addressee",
                    models.CharField(
                        help_text="Message recipient callsign", max_length=10
                    ),
                ),
                ("message_text", models.TextField(help_text="Message content")),
                (
                    "message_number",
                    models.CharField(
                        blank=True, help_text="Message number for ACK", max_length=10
                    ),
                ),
                (
                    "is_ack",
                    models.BooleanField(
                        default=False, help_text="Is this an acknowledgment?"
                    ),
                ),
                (
                    "is_rej",
                    models.BooleanField(default=False, help_text="Is this a reject?"),
                ),
                (
                    "ack_received",
                    models.BooleanField(
                        default=False, help_text="Has ACK been received?"
                    ),
                ),
                (
                    "packet",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message",
                        to="packets.aprspacket",
                    ),
                ),
            ],
            options={
                "ordering": ["-packet__timestamp"],
                "indexes": [
                    models.Index(
                        fields=["addressee"], name="packets_mes_address_df8d20_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PositionReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "altitude",
                    models.FloatField(
                        blank=True, help_text="Altitude in meters", null=True
                    ),
                ),
                (
                    "symbol_table",
                    models.CharField(
                        choices=[("/", "Primary Table"), ("\\", "Alternate Table")],
                        default="/",
                        max_length=1,
                    ),
                ),
                ("symbol_code", models.CharField(max_length=1)),
                (
                    "course",
                    models.IntegerField(
                        blank=True, help_text="Course in degrees (0-360)", null=True
                    ),
                ),
                (
                    "speed",
                    models.FloatField(
                        blank=True, help_text="Speed in knots", null=True
                    ),
                ),
                (
                    "power",
                    models.IntegerField(
                        blank=True, help_text="Power in watts", null=True
                    ),
                ),
                (
                    "height",
                    models.IntegerField(
                        blank=True, help_text="Antenna height in feet", null=True
                    ),
                ),
                (
                    "gain",
                    models.IntegerField(
                        blank=True, help_text="Antenna gain in dB", null=True
                    ),
                ),
                (
                    "directivity",
                    models.IntegerField(
                        blank=True, help_text="Directivity in degrees", null=True
                    ),
                ),
                (
                    "range_miles",
                    models.FloatField(
                        blank=True, help_text="Range in miles", null=True
                    ),
                ),
                ("comment", models.TextField(blank=True)),
                (
                    "packet",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="position",
                        to="packets.aprspacket",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="stations.station",
                    ),
                ),
            ],
            options={
                "ordering": ["-packet__timestamp"],
                "indexes": [
                    models.Index(
                        fields=["station"], name="packets_pos_station_93b446_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="TelemetryData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sequence_number", models.IntegerField()),
                ("analog_1", models.IntegerField(blank=True, null=True)),
                ("analog_2", models.IntegerField(blank=True, null=True)),
                ("analog_3", models.IntegerField(blank=True, null=True)),
                ("analog_4", models.IntegerField(blank=True, null=True)),
                ("analog_5", models.IntegerField(blank=True, null=True)),
                (
                    "digital_bits",
                    models.IntegerField(default=0, help_text="8-bit digital value"),
                ),
                ("scaling_parameters", models.JSONField(blank=True, default=dict)),
                (
                    "packet",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telemetry",
                        to="packets.aprspacket",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telemetry_data",
                        to="stations.station",
                    ),
                ),
            ],
            options={
                "ordering": ["-packet__timestamp"],
                "indexes": [
                    models.Index(
                        fields=["station", "sequence_number"],
                        name="packets_tel_station_6fce49_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="WeatherReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("temperature", models.FloatField(blank=True, null=True)),
                (
                    "wind_direction",
                    models.IntegerField(
                        blank=True, help_text="Wind direction in degrees", null=True
                    ),
                ),
                (
                    "wind_speed",
                    models.FloatField(
                        blank=True, help_text="Wind speed in mph", null=True
                    ),
                ),
                (
                    "wind_gust",
                    models.FloatField(
                        blank=True, help_text="Wind gust in mph", null=True
                    ),
                ),
                (
                    "rainfall_1h",
                    models.FloatField(
                        blank=True, help_text="1-hour rainfall in inches", null=True
                    ),
                ),
                (
                    "rainfall_24h",
                    models.FloatField(
                        blank=True, help_text="24-hour rainfall in inches", null=True
                    ),
                ),
                (
                    "rainfall_since_midnight",
                    models.FloatField(
                        blank=True,
                        help_text="Rainfall since midnight in inches",
                        null=True,
                    ),
                ),
                (
                    "barometric_pressure",
                    models.FloatField(
                        blank=True, help_text="Barometric pressure in hPa", null=True
                    ),
                ),
                (
                    "humidity",
                    models.IntegerField(
                        blank=True, help_text="Humidity percentage", null=True
                    ),
                ),
                (
                    "visibility",
                    models.FloatField(
                        blank=True, help_text="Visibility in miles", null=True
                    ),
                ),
                (
                    "solar_radiation",
                    models.FloatField(
                        blank=True, help_text="Solar radiation in watts/m²", null=True
                    ),
                ),
                (
                    "uv_index",
                    models.FloatField(blank=True, help_text="UV index", null=True),
                ),
                (
                    "snow_depth",
                    models.FloatField(
                        blank=True, help_text="Snow depth in inches", null=True
                    ),
                ),
                (
                    "packet",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weather",
                        to="packets.aprspacket",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weather_reports",
                        to="stations.station",
                    ),
                ),
            ],
            options={
                "ordering": ["-packet__timestamp"],
                "indexes": [
                    models.Index(
                        fields=["station"], name="packets_wea_station_0ed1ed_idx"
                    )
                ],
            },
        ),
    ]
