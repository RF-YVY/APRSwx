# Generated by Django 5.2.4 on 2025-07-04 12:23

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SystemMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("alert", "System Alert"),
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "is_popup",
                    models.BooleanField(
                        default=False, help_text="Show as popup notification"
                    ),
                ),
                (
                    "is_persistent",
                    models.BooleanField(
                        default=False, help_text="Keep visible until dismissed"
                    ),
                ),
                ("starts_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("ends_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebSocketConnection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("connection_id", models.CharField(max_length=100, unique=True)),
                ("channel_name", models.CharField(max_length=100, unique=True)),
                (
                    "connection_type",
                    models.CharField(
                        choices=[
                            ("web", "Web Browser"),
                            ("mobile", "Mobile App"),
                            ("api", "API Client"),
                            ("service", "Service Connection"),
                        ],
                        default="web",
                        max_length=20,
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=100)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "filter_bounds",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Geographic bounds for filtering",
                    ),
                ),
                (
                    "max_distance_km",
                    models.FloatField(
                        blank=True,
                        help_text="Maximum distance for filtering",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("connected_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("disconnected_at", models.DateTimeField(blank=True, null=True)),
                ("messages_sent", models.IntegerField(default=0)),
                ("messages_received", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-connected_at"],
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subscription_type",
                    models.CharField(
                        choices=[
                            ("packets", "APRS Packets"),
                            ("stations", "Station Updates"),
                            ("weather", "Weather Data"),
                            ("radar", "Radar Data"),
                            ("alerts", "Weather Alerts"),
                            ("messages", "APRS Messages"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "filters",
                    models.JSONField(
                        blank=True, default=dict, help_text="Subscription filters"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "rate_limit",
                    models.IntegerField(
                        default=0,
                        help_text="Rate limit in messages per second (0 = no limit)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("messages_sent", models.IntegerField(default=0)),
                ("last_message_sent", models.DateTimeField(blank=True, null=True)),
                (
                    "connection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="websockets.websocketconnection",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MessageQueue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_id", models.CharField(max_length=100, unique=True)),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("packet", "APRS Packet"),
                            ("station_update", "Station Update"),
                            ("weather_data", "Weather Data"),
                            ("radar_update", "Radar Update"),
                            ("alert", "Weather Alert"),
                            ("system", "System Message"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[
                            (1, "Critical"),
                            (2, "High"),
                            (3, "Normal"),
                            (4, "Low"),
                        ],
                        default=3,
                    ),
                ),
                ("content", models.JSONField(help_text="Message content")),
                (
                    "target_all",
                    models.BooleanField(
                        default=False, help_text="Send to all active connections"
                    ),
                ),
                ("filter_criteria", models.JSONField(blank=True, default=dict)),
                ("is_sent", models.BooleanField(default=False)),
                ("sent_count", models.IntegerField(default=0)),
                ("failed_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "target_connections",
                    models.ManyToManyField(
                        blank=True, to="websockets.websocketconnection"
                    ),
                ),
            ],
            options={
                "ordering": ["priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ConnectionStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_connect_time",
                    models.DurationField(default=datetime.timedelta(0)),
                ),
                (
                    "average_session_duration",
                    models.DurationField(default=datetime.timedelta(0)),
                ),
                ("session_count", models.IntegerField(default=0)),
                ("total_messages_sent", models.IntegerField(default=0)),
                ("total_messages_received", models.IntegerField(default=0)),
                ("average_messages_per_minute", models.FloatField(default=0.0)),
                ("bytes_sent", models.BigIntegerField(default=0)),
                ("bytes_received", models.BigIntegerField(default=0)),
                ("connection_errors", models.IntegerField(default=0)),
                ("message_errors", models.IntegerField(default=0)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "connection",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to="websockets.websocketconnection",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="websocketconnection",
            index=models.Index(
                fields=["connection_id"], name="websockets__connect_4ec339_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="websocketconnection",
            index=models.Index(
                fields=["channel_name"], name="websockets__channel_023318_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="websocketconnection",
            index=models.Index(
                fields=["user", "is_active"], name="websockets__user_id_7af51d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="subscription",
            index=models.Index(
                fields=["connection", "subscription_type"],
                name="websockets__connect_bfb9a9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="subscription",
            index=models.Index(
                fields=["subscription_type", "is_active"],
                name="websockets__subscri_1c96f9_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="subscription",
            unique_together={("connection", "subscription_type")},
        ),
        migrations.AddIndex(
            model_name="messagequeue",
            index=models.Index(
                fields=["message_type", "is_sent"],
                name="websockets__message_51b510_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="messagequeue",
            index=models.Index(
                fields=["priority", "created_at"], name="websockets__priorit_d3367c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="messagequeue",
            index=models.Index(
                fields=["scheduled_at"], name="websockets__schedul_a924c0_idx"
            ),
        ),
    ]
